#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Виртуальный хост для FaraDevOps.com с SSL
    server {
        listen 443 ssl;
        server_name FaraDevOps.com;

        # Путь до сертификата и ключа
        ssl_certificate C:/nginx/conf/selfsigned.crt;
        ssl_certificate_key C:/nginx/conf/selfsigned.key;

        # Параметры SSL для безопасности
        ssl_dhparam C:/nginx/conf/dhparam.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "HIGH:!aNULL:!MD5";

        # Корневая директория
        root C:/nginx/html;
        index index.html;

        # Псевдоним для /FaraLimansk/
        location /FaraLimansk/ {
            alias C:/nginx/html/;
            try_files $uri $uri/ =404;
        }

        # Обработка запросов к корневому пути
        location / {
            try_files $uri $uri/ =404;
        }
    }

    # Редирект с HTTP на HTTPS для FaraDevOps.com
    server {
        listen 80;
        server_name FaraDevOps.com;

        return 301 https://$host$request_uri;
    }

    # Виртуальный хост для второго домена (secondsite.com) с SSL
    server {
        listen 443 ssl;
        server_name secondsite.com;

        # Путь до сертификата и ключа для второго сайта
        ssl_certificate C:/nginx/conf/secondsite.crt;
        ssl_certificate_key C:/nginx/conf/secondsite.key;

        # Корневая директория для второго сайта
        root C:/nginx/html/;
        index index2.html;

        # Псевдоним для /SecondSite/
        location /SecondSite/ {
            alias C:/nginx/html/;
            try_files $uri $uri/ =404;
        }

        # Обработка запросов к корневому пути
        location / {
            try_files $uri $uri/ =404;
        }
    }

    # Редирект с HTTP на HTTPS для secondsite.com
    server {
        listen 80;
        server_name secondsite.com;

        return 301 https://$host$request_uri;
    }
}
